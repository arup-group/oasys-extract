# This is a basic workflow to help you get started with Actions

name: Create Extract

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version of the installer to make'     
        required: true
        
defaults:
  run:
    shell: powershell
    working-directory: extract

jobs:                
  extract:
    runs-on: windows-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        
      - name: Calculate tag version
        id: calculateTagVersion
        run: |
          $tag = "${{ github.event.inputs.version }}.$($env:GITHUB_RUN_ID%65536)"
          echo "::set-output name=tag::$tag"
    
      - name: Restore Extract NuGets
        run: nuget restore
        
      - name: Add MSBuild to the path
        uses: microsoft/setup-msbuild@v1.0.1
        
      - name: Compile Extract in Release configuration
        run: msbuild extract.sln /property:Configuration=Release
        
      - name: Create Release
        id: create-release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name: ${{ steps.calculateTagVersion.outputs.tag }}
          release_name: Extract Release ${{ steps.calculateTagVersion.outputs.tag }}
          body: |
            Automated Build of Extract
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}  
          asset_path: ./extract/extract.exe
          asset_name: extract.exe
          asset_content_type: application/vnd.microsoft.portable-executable
